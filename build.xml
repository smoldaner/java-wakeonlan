<!-- $Id: build.xml,v 1.4 2004/05/17 21:59:33 gon23 Exp $ -->
<project name="wakeonlan" default="all" basedir=".">
	<property file="build.properties"/>
	
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	
	
	<target name="init.build">
		<tstamp>
			<format property="BUILD" pattern="yyyy-MM-d-HH:mm" locale="en"/>
		</tstamp>
		<mkdir dir="${build.classes.dir}"/>
	</target>
	
	<target name="init.deploy">
		<mkdir dir="${deploy.dir}"/>
		<mkdir dir="${deploy.lib.dir}"/>
		<mkdir dir="${deploy.doc.dir}"/>
	</target>
	
	<target name="init.deploy.ws" depends="init.deploy">
		<mkdir dir="${deploy.ws.dir}"/>
	</target>
	
	<target name="init.deploy.zip" depends="init.deploy">
		<mkdir dir="${deploy.zip.dir}"/>
	</target>
	
	<target name="build" depends="init.build">
		<javac destdir="${build.classes.dir}" 
			debug="${build.debug}" 
			optimize="${build.optimize}" 
			target="${build.target}" 
			classpathref="build.classpath" >
			<src path="${src.dir}" />
			<src path="${testsrc.dir}" />
		</javac>
		<copy todir="${build.classes.dir}" overwrite="true">
			<fileset dir="${src.dir}">
				<include name="**/*.properties"/>
			</fileset>
			<filterset>
				<filter token="VERSION" value="${version}"/>
				<filter token="BUILD" value="${BUILD}"/>
			</filterset>
		</copy>
		<copy todir="${build.classes.dir}" overwrite="true">
			<fileset dir="${src.dir}">
				<include name="**/*.gif"/>
			</fileset>
		</copy>
	</target>
	
	<target name="init.javadoc">
		<mkdir dir="${deploy.javadoc.dir}"/>
	</target>
	
	<target name="javadoc" depends="init.javadoc">
		<javadoc 
			destdir="${deploy.javadoc.dir}" 
			packagenames="wol.*"
			sourcepath="${src.dir}"
			windowtitle="wakeonlan - API"
			author="true">
			<doctitle><![CDATA[<h1>wakeonlan</h1>]]></doctitle>
			<link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
		</javadoc>
	</target>
	
	<target name="test" depends="build">
		<junit showoutput="true" printsummary="true">
			<classpath >
				<path refid="build.classpath" />
				
				<dirset dir="${build.classes.dir}" />
			</classpath>
			<batchtest>
				<fileset dir="${testsrc.dir}">
					<include name="**/*Test*.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="deploy.zip" depends="init.deploy.zip,deploy,javadoc" >
		<zip 
			compress="true" 
			destfile="${deploy.zip.dir}/${ant.project.name}-${version}.zip"
			update="false">
			
			<zipfileset dir="${src.dir}" prefix="src">
				<include name="**/*.java"/>
				<include name="**/*.propertis"/>
			</zipfileset>
			<zipfileset dir="${testsrc.dir}" prefix="testsrc">
				<include name="**/*.java"/>
				<include name="**/*.propertis"/>
			</zipfileset>
			<zipfileset dir="${lib.dir}" prefix="lib">
				<include name="**/*.jar"/>
			</zipfileset>
			<zipfileset dir="${deploy.javadoc.dir}" prefix="doc/javadoc"/>
			<zipfileset dir="${doc.dir}" prefix="doc">
				<include name="README"/>
			</zipfileset>
			<fileset dir="${basedir}">
				<include name="build.xml"/>
				<include name="build.properties"/>
			</fileset>
			<fileset dir="${deploy.dir}">
				<include name="${ant.project.name}.jar"/>
			</fileset>
		</zip>
	</target>
	
	<target name="deploy" depends="build,init.deploy">
		<jar basedir="${build.classes.dir}" 
			destfile="${deploy.dir}/${ant.project.name}.jar" 
			manifest="${build.manifest}" />
		<copy todir="${deploy.lib.dir}">
			<fileset dir="${lib.dir}" />
		</copy>
		<copy todir="${deploy.doc.dir}" >
			<fileset dir="${doc.dir}" />
		</copy>
	</target>
	
	
	<target name="deploy.ws" depends="build,init.deploy.ws">
		<jar basedir="${build.classes.dir}" 
			destfile="${deploy.ws.dir}/${ant.project.name}.jar" 
			manifest="${build.manifest}" />
		<signjar jar="${deploy.ws.dir}/${ant.project.name}.jar" 
			alias="${sign.alias}" 
			storepass="${sign.storepass}"
			keystore="${sign.keystore}"
			keypass="${sign.keypass}"/>
		<copy todir="${deploy.ws.dir}" >
			<fileset dir="${javaws.dir}">
				<include name="wakeonlan.jnlp"/>
				<include name="wakeonlan64x64.gif"/>
			</fileset>
		</copy>
	</target>
	
	
	<target name="clean">
		<delete quiet="true">
			<fileset dir="${deploy.dir}" />
			<fileset dir="${build.dir}" />
		</delete>
	</target>
	
	<target name="all">
		<echo message="Cleaning project" />
		<antcall target="clean" />
		<echo message="Deploy wakeonlan" />
		<antcall target="deploy" />
	</target>
</project>